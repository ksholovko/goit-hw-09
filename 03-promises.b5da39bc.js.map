{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SA6BA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IArCPQ,KAAO,CACLC,KAAOC,SAASC,cAAc,SAC9BC,WAAaF,SAASC,cAAc,uBACpCE,UAAYH,SAASC,cAAc,sBACnCG,YAAcJ,SAASC,cAAc,yBAGvCH,KAAKC,KAAKM,iBAAiB,UAE3B,SAAoBC,GAClBA,EAAEC,iBAMD,IAJH,IAAMC,EAAaC,SAASX,KAAKI,WAAWQ,OACtCC,EAAYF,SAASX,KAAKK,UAAUO,OACpCE,EAAcH,SAASX,KAAKM,YAAYM,OAElCG,EAAI,EAAGA,EAAID,EAAaC,IAChCzB,EAAcyB,EAAI,EAAGL,EAAaK,EAAIF,GAAWG,MAAK,SAAAC,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACnEJ,EAAA8B,OAAOC,QAAQ,uBAAwCC,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M,IAE1D6B,OAAM,SAAAJ,G,IAAG1B,EAAQ0B,EAAR1B,SAAUC,EAAKyB,EAALzB,MACtBJ,EAAA8B,OAAOI,QAAQ,sBAAqCF,OAAf7B,EAAS,QAAY6B,OAAN5B,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nrefs = {\n  form : document.querySelector('.form'),\n  delayInput : document.querySelector('input[name=\"delay\"]'),\n  stepInput : document.querySelector('input[name=\"step\"]'),\n  amountInput : document.querySelector('input[name=\"amount\"]'),\n}\n\nrefs.form.addEventListener('submit', submitForm);\n\nfunction submitForm(e) {\n  e.preventDefault();\n  \nconst delayValue = parseInt(refs.delayInput.value);\nconst stepValue = parseInt(refs.stepInput.value);\nconst amountValue = parseInt(refs.amountInput.value);\n\n   for (let i = 0; i < amountValue; i++) {\n    createPromise(i + 1, delayValue + i * stepValue).then(({ position, delay }) => {\n    Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n  })\n      .catch(({ position, delay }) => {\n    Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n  }\n}\n   \n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","refs","form","document","querySelector","delayInput","stepInput","amountInput","addEventListener","e","preventDefault","delayValue","parseInt","value","stepValue","amountValue","i","then","param","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.b5da39bc.js.map"}